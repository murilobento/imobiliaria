require('dotenv').config({ path: '.env.local' });

async function debugLogout() {
  console.log('üîç Diagnosticando problema do logout...\n');

  try {
    console.log('1. Verificando configura√ß√£o do Supabase...');
    
    const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;
    const supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;
    
    if (!supabaseUrl || !supabaseKey) {
      console.log('‚ùå Vari√°veis de ambiente do Supabase n√£o encontradas');
      return;
    }
    
    console.log('‚úÖ Vari√°veis de ambiente configuradas');
    console.log(`- URL: ${supabaseUrl.substring(0, 30)}...`);
    console.log(`- Key: ${supabaseKey.substring(0, 30)}...`);

    console.log('\n2. Testando logout via API direta...');
    
    // Primeiro, vamos fazer login
    const { createClient } = await import('@supabase/supabase-js');
    const supabase = createClient(supabaseUrl, supabaseKey);
    
    console.log('Fazendo login...');
    const { data: loginData, error: loginError } = await supabase.auth.signInWithPassword({
      email: 'admin@imobiliaria.com',
      password: 'admin123'
    });
    
    if (loginError) {
      console.log('‚ùå Erro no login:', loginError.message);
      return;
    }
    
    console.log('‚úÖ Login realizado com sucesso');
    console.log(`- Usu√°rio: ${loginData.user?.email}`);
    console.log(`- Session: ${loginData.session ? 'Presente' : 'Ausente'}`);
    
    // Agora vamos testar o logout
    console.log('\nFazendo logout...');
    const { error: logoutError } = await supabase.auth.signOut();
    
    if (logoutError) {
      console.log('‚ùå Erro no logout:', logoutError.message);
    } else {
      console.log('‚úÖ Logout realizado com sucesso via API');
    }
    
    // Verificar se ainda h√° sess√£o
    const { data: { session }, error: sessionError } = await supabase.auth.getSession();
    
    if (sessionError) {
      console.log('‚ùå Erro ao verificar sess√£o:', sessionError.message);
    } else {
      console.log(`- Sess√£o ap√≥s logout: ${session ? 'AINDA PRESENTE ‚ùå' : 'Removida ‚úÖ'}`);
    }

    console.log('\n3. Poss√≠veis causas do problema:');
    console.log('');
    console.log('a) Cookies n√£o sendo limpos no navegador');
    console.log('b) M√∫ltiplas inst√¢ncias do cliente Supabase');
    console.log('c) Configura√ß√£o de dom√≠nio/CORS');
    console.log('d) Cache do navegador');
    console.log('e) Configura√ß√£o de cookies do Supabase');
    
    console.log('\n4. Solu√ß√µes a implementar:');
    console.log('');
    console.log('‚úÖ Implementar limpeza manual de cookies');
    console.log('‚úÖ For√ßar reload da p√°gina ap√≥s logout');
    console.log('‚úÖ Limpar localStorage/sessionStorage');
    console.log('‚úÖ Usar signOut com escopo global');

  } catch (error) {
    console.error('‚ùå Erro durante diagn√≥stico:', error.message);
  }
}

debugLogout();