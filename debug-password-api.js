/**
 * Debug espec√≠fico da API de altera√ß√£o de senha
 */

// Simular as fun√ß√µes necess√°rias
const { createClient } = require('@supabase/supabase-js');
const bcrypt = require('bcryptjs');

async function debugPasswordChange() {
  try {
    console.log('üîç Debugando API de altera√ß√£o de senha...');
    
    const supabase = createClient(
      'https://wmmfqzykbsbmzuazaikp.supabase.co',
      'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6IndtbWZxenlrYnNibXp1YXphaWtwIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1MzU1OTA3NiwiZXhwIjoyMDY5MTM1MDc2fQ._w-yLvDS0UOsubibQ6TLlU_vjVuu5PYcODC4_1XLDmU'
    );
    
    // 1. Verificar se existe um usu√°rio admin
    console.log('1Ô∏è‚É£ Verificando usu√°rios existentes...');
    const { data: users, error: usersError } = await supabase
      .from('auth_users')
      .select('*');
    
    if (usersError) {
      console.error('‚ùå Erro ao buscar usu√°rios:', usersError);
      return;
    }
    
    console.log('‚úÖ Usu√°rios encontrados:', users.length);
    if (users.length > 0) {
      console.log('Primeiro usu√°rio:', {
        id: users[0].id,
        username: users[0].username,
        role: users[0].role
      });
      
      // 2. Testar verifica√ß√£o de senha
      console.log('\n2Ô∏è‚É£ Testando verifica√ß√£o de senha...');
      const testPassword = 'admin123';
      const isValid = await bcrypt.compare(testPassword, users[0].password_hash);
      console.log('Senha "admin123" √© v√°lida?', isValid);
      
      if (isValid) {
        // 3. Testar hash de nova senha
        console.log('\n3Ô∏è‚É£ Testando hash de nova senha...');
        const newPassword = 'NewPassword123!';
        const saltRounds = 12;
        const newPasswordHash = await bcrypt.hash(newPassword, saltRounds);
        console.log('Nova senha hasheada com sucesso');
        
        // 4. Testar atualiza√ß√£o (sem executar)
        console.log('\n4Ô∏è‚É£ Simulando atualiza√ß√£o de senha...');
        console.log('UPDATE auth_users SET password_hash = ? WHERE id = ?');
        console.log('Par√¢metros:', [newPasswordHash.substring(0, 20) + '...', users[0].id]);
        console.log('‚úÖ Simula√ß√£o bem-sucedida');
      }
    } else {
      console.log('‚ùå Nenhum usu√°rio encontrado');
    }
    
  } catch (error) {
    console.error('üí• Erro no debug:', error);
  }
}

debugPasswordChange();